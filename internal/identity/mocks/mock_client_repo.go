// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/decentraland/world/internal/identity/repository (interfaces: ClientRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	repository "github.com/decentraland/world/internal/identity/repository"
	gomock "github.com/golang/mock/gomock"
)

// MockClientRepository is a mock of ClientRepository interface
type MockClientRepository struct {
	ctrl     *gomock.Controller
	recorder *MockClientRepositoryMockRecorder
}

// MockClientRepositoryMockRecorder is the mock recorder for MockClientRepository
type MockClientRepositoryMockRecorder struct {
	mock *MockClientRepository
}

// NewMockClientRepository creates a new mock instance
func NewMockClientRepository(ctrl *gomock.Controller) *MockClientRepository {
	mock := &MockClientRepository{ctrl: ctrl}
	mock.recorder = &MockClientRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClientRepository) EXPECT() *MockClientRepositoryMockRecorder {
	return m.recorder
}

// GetByDomain mocks base method
func (m *MockClientRepository) GetByDomain(arg0 string) (*repository.ClientData, error) {
	ret := m.ctrl.Call(m, "GetByDomain", arg0)
	ret0, _ := ret[0].(*repository.ClientData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByDomain indicates an expected call of GetByDomain
func (mr *MockClientRepositoryMockRecorder) GetByDomain(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByDomain", reflect.TypeOf((*MockClientRepository)(nil).GetByDomain), arg0)
}

// GetByID mocks base method
func (m *MockClientRepository) GetByID(arg0 string) (*repository.ClientData, error) {
	ret := m.ctrl.Call(m, "GetByID", arg0)
	ret0, _ := ret[0].(*repository.ClientData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockClientRepositoryMockRecorder) GetByID(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockClientRepository)(nil).GetByID), arg0)
}
